name: "GitHub Actions terraform"

on:
  workflow_call:
    inputs:
      kics-ignore:
        default: false
        type: boolean
        description: "ignore kics failure"

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      tf_dirs: ${{ steps.tf_list.outputs.tf_dirs }}
    env:
      working_directory: terraform
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: list tf directories
        id: tf_list
        run: | 
          dirs="$(find ${working_directory} -mindepth 1 -maxdepth 1 -type d | jq -R | jq -scM )"
          echo "tf_dirs=${dirs}" >> $GITHUB_OUTPUT
          echo "tf_dirs=${dirs}"

  terraform-fmt:
    runs-on: ubuntu-latest
    needs: setup
    env:
      working_directory: terraform
    strategy:
      matrix:
        tf_dirs: ${{fromJson(needs.setup.outputs.tf_dirs)}}
    steps:
      - name: install tfenv
        run: |
          git clone --depth=1 https://github.com/tfutils/tfenv.git ~/.tfenv
          export PATH=$PATH:$HOME/.tfenv/bin
      - name: Checkout
        uses: actions/checkout@v3
      - name: fmt
        run: |
          cd ${{ matrix.tf_dirs }}
          terraform fmt --check

  terraform-lint:
    runs-on: ubuntu-latest
    needs: setup
    env:
      working_directory: terraform
    strategy:
      matrix:
        tf_dirs: ${{fromJson(needs.setup.outputs.tf_dirs)}}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - uses: actions/cache@v2
        name: Cache plugin dir
        with:
          path: ~/.tflint.d/plugins
          key: tflint-${{ hashFiles('.tflint.hcl') }}
      - uses: terraform-linters/setup-tflint@v2
        name: Setup TFLint
        with:
          tflint_version: v0.38.1
      - name: Init TFLint
        run: |
          tflint --init
      - name: Run TFLint
        run: |
          cd ${{ matrix.tf_dirs }}
          tflint -f compact

  terraform-kics:
    runs-on: ubuntu-latest
    needs: setup
    env:
      working_directory: terraform

    strategy:
      matrix:
        tf_dirs: ${{fromJson(needs.setup.outputs.tf_dirs)}}
    steps:
    - uses: actions/checkout@v3
    - name: run kics Scan
      uses: checkmarx/kics-github-action@v1.6
      continue-on-error: ${{ inputs.kics-ignore }}
      with:
        path: ${{ matrix.tf_dirs }}
        output_path: myResults/
        token: ${{ secrets.GITHUB_TOKEN }}
        ignore_on_exit: results
        enable_comments: true
    - name: display kics results
      run: |
        cat myResults/results.json
  
  infracost:
    name: Infracost
    runs-on: ubuntu-latest
    needs: setup
    permissions:
      contents: read
      pull-requests: write
    env:
      working_directory: terraform
    strategy:
      matrix:
        tf_dirs: ${{fromJson(needs.setup.outputs.tf_dirs)}}
    steps:
      - name: Setup Infracost
        uses: infracost/actions/setup@v2
        # See https://github.com/infracost/actions/tree/master/setup for other inputs
        # If you can't use this action, see Docker images in https://infracost.io/cicd
        with:
          api-key: ${{ secrets.INFRACOST_API_KEY }}
      - name: Checkout base branch
        uses: actions/checkout@v3
        with:
          ref: '${{ github.event.pull_request.base.ref }}'

      # Generate Infracost JSON file as the baseline.
      - name: Generate Infracost cost estimate baseline
        run: |
          infracost breakdown --path=${{ matrix.tf_dirs }} \
                              --format=json \
                              --out-file=/tmp/infracost-base.json

      # Checkout the current PR branch so we can create a diff.
      - name: Checkout PR branch
        uses: actions/checkout@v3

      - name: Generate Infracost diff
        run: |
          infracost diff --path=${{ matrix.tf_dirs }} \
                          --format=json \
                          --compare-to=/tmp/infracost-base.json \
                          --out-file=/tmp/infracost.json
      - name: Post Infracost comment
        run: |
            infracost comment github --path=/tmp/infracost.json \
                                     --repo=$GITHUB_REPOSITORY \
                                     --github-token=${{github.token}} \
                                     --pull-request=${{github.event.pull_request.number}} \
                                     --behavior=update