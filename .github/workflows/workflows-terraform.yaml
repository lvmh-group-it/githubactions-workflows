name: "GitHub Actions terraform"

on:
  workflow_call:
    inputs:
      kics-ignore:
        default: false
        type: boolean
        description: "ignore kics failure"
      kics-level-failure:
        default: "high,medium"
        type: string
        description: "kics level failure"
      working_directory:
        default: "terraform"
        type: string
        description: "Terraform working directory"
    secrets:
      infracost_api_key:
        description: "Infracost api key"
        required: true
      LVMH_GITHUB_TOKEN:
        description: "Token for get token"
        required: true

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      tf_dirs: ${{ steps.tf_list.outputs.tf_dirs }}
      live_tf_dirs: ${{ steps.tf_list.outputs.live_tf_dirs }}
    env:
      working_directory: ${{ inputs.working_directory }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: list tf directories
        id: tf_list
        run: |
          all_tf_dirs="$(find ${working_directory} ${working_directory}/modules \
                              -mindepth 1 \
                              -maxdepth 1 \
                              -type d \
                              -not -path "*modules" | jq -R | jq -scM )"
          live_tf_dirs="$( find ${working_directory} \
                              -mindepth 1 \
                              -maxdepth 2 \
                              -name main.tf \
                              -exec dirname {} \; | jq -R | jq -scM )"
          echo "tf_dirs=${all_tf_dirs}" 
          echo "live_tf_dirs=${live_tf_dirs}"
          echo "tf_dirs=${all_tf_dirs}" >> $GITHUB_OUTPUT
          echo "live_tf_dirs=${live_tf_dirs}" >> $GITHUB_OUTPUT

  terraform-fmt:
    runs-on: ubuntu-latest
    needs: setup
    env:
      working_directory: ${{ inputs.working_directory }}
    strategy:
      matrix:
        tf_dirs: ${{fromJson(needs.setup.outputs.tf_dirs)}}
    steps:
      - name: install tfenv
        run: |
          git clone --depth=1 https://github.com/tfutils/tfenv.git ~/.tfenv
          export PATH=$PATH:$HOME/.tfenv/bin
      - name: Checkout
        uses: actions/checkout@v3
      - name: fmt
        run: |
          cd ${{ matrix.tf_dirs }}
          terraform fmt --check

  terraform-lint:
    runs-on: ubuntu-latest
    needs: setup
    env:
      working_directory: ${{ inputs.working_directory }}
    strategy:
      matrix:
        tf_dirs: ${{fromJson(needs.setup.outputs.tf_dirs)}}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - uses: actions/cache@v2
        name: Cache plugin dir
        with:
          path: ~/.tflint.d/plugins
          key: tflint-${{ hashFiles('.tflint.hcl') }}
      - uses: terraform-linters/setup-tflint@v2
        name: Setup TFLint
        with:
          tflint_version: v0.38.1
      - name: Init TFLint
        run: |
          tflint --init
      - name: Run TFLint
        run: |
          cd ${{ matrix.tf_dirs }}
          tflint -f compact

  terraform-kics:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: run kics Scan
        uses: checkmarx/kics-github-action@v1.6
        continue-on-error: ${{ inputs.kics-ignore }}
        with:
          path: ${{ inputs.working_directory }}
          output_path: myResults/
          token: ${{ secrets.GITHUB_TOKEN }}
          fail_on: ${{ inputs.kics-level-failure }}
          enable_comments: true
      - name: display kics results
        run: |
          cat myResults/results.json

  infracost:
    name: Infracost
    runs-on: ubuntu-latest
    needs: setup
    permissions:
      contents: read
      pull-requests: write
    env:
      working_directory: ${{ inputs.working_directory }}
      infracost_api_key: ${{ secrets.infracost_api_key }}
      LVMH_GITHUB_TOKEN: ${{ secrets.LVMH_GITHUB_TOKEN }}
    strategy:
      matrix:
        tf_dirs: ${{fromJson(needs.setup.outputs.live_tf_dirs)}}
    steps:
      - name: Setup Infracost
        uses: infracost/actions/setup@v2
        # See https://github.com/infracost/actions/tree/master/setup for other inputs
        # If you can't use this action, see Docker images in https://infracost.io/cicd
        with:
          api-key: ${infracost_api_key}

      - name: setup github config for private modules
        run: |
          git config \
            --global url."https://${LVMH_GITHUB_TOKEN}@github.com".insteadOf https://github.com

      - name: Checkout base branch
        uses: actions/checkout@v3
        with:
          ref: "${{ github.event.pull_request.base.ref }}"

      # Generate Infracost JSON file as the baseline.
      - name: Generate Infracost cost estimate baseline
        run: |
          infracost breakdown --path=${{ matrix.tf_dirs }} \
                              --format=json \
                              --out-file=/tmp/infracost-base.json

      # Checkout the current PR branch so we can create a diff.
      - name: Checkout PR branch
        uses: actions/checkout@v3

      - name: Generate Infracost diff
        run: |
          infracost diff --path=${{ matrix.tf_dirs }} \
                          --format=json \
                          --compare-to=/tmp/infracost-base.json \
                          --out-file=/tmp/infracost.json
      - name: Post Infracost comment
        run: |
          infracost comment github --path=/tmp/infracost.json \
                                   --repo=$GITHUB_REPOSITORY \
                                   --github-token=${{github.token}} \
                                   --pull-request=${{github.event.pull_request.number}} \
                                   --behavior=new
